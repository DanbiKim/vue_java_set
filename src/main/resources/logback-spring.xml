<?xml version="1.0" encoding="UTF-8"?>
<configuration>
  <!-- Send debug messages to System.out -->
  <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
    <!-- By default, encoders are assigned the type ch.qos.logback.classic.encoder.PatternLayoutEncoder -->
    <encoder>
      <pattern>%d{HH:mm:ss.SSS} [%-5level] %logger{20} - %msg%n</pattern>
    </encoder>
  </appender>
 
  <!-- Send debug message to file -->
  <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
    <file>${LOG_PATH:-logs}/test-api.log</file>
    <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
      <pattern>%d{HH:mm:ss.SSS} [%-5level] %logger{20} - %msg%n</pattern>
    </encoder>
 
    <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
      <fileNamePattern>${LOG_PATH:-logs}/test-api-%d{yyyy-MM-dd}-%i.log</fileNamePattern>
      <!-- each file should be at most 10MB, keep 30 days worth of history -->
      <maxHistory>30</maxHistory>
      <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
        <maxFileSize>30MB</maxFileSize>
      </timeBasedFileNamingAndTriggeringPolicy>
    </rollingPolicy>
  </appender>
 
  <springProfile name="local">
    <root level="INFO">
      <appender-ref ref="STDOUT"/>
    </root>
  </springProfile>
 
  <springProfile name="dev">
    <root level="INFO">
      <appender-ref ref="STDOUT"/>
      <appender-ref ref="FILE"/>
    </root>
  </springProfile>
 
  <springProfile name="real">
    <root level="INFO">
      <appender-ref ref="STDOUT"/>
      <appender-ref ref="FILE"/>
    </root>
  </springProfile>
  
  <logger name="com.playd.vue" level="DEBUG"/> 
     
  <logger name="java.sqlonly" level="DEBUG"/>
  <logger name="jdbc.sqltiming" level="ERROR"/>    <!-- SQL문과 해당 SQL을 실행시키는데 수행된 시간 정보(milliseconds)를 포함한다. -->
  <logger name="jdbc.audit" level="ERROR"/>    <!-- ResultSet을 제외한 모든 JDBC 호출 정보를 로그로 남긴다. 많은 양의 로그가 생성되므로 특별히 JDBC 문제를 추적해야 할 필요가 있는 경우를 제외하고는 사용을 권장하지 않는다. -->
  <logger name="jdbc.resultset" level="ERROR"/> <!-- ResultSet을 포함한 모든 JDBC 호출 정보를 로그로 남기므로 매우 방대한 양의 로그가 생성된다. -->
  <logger name="jdbc.resultsettable" level="ERROR"/>
  
</configuration>